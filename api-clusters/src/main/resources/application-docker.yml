management:
  health.db.enabled: false
  endpoints:    
    web:
      base-path: /
      exposure:
        include: "*"

zookeeper:
  host: api-clusters-zookeeper:2181
  maxRetries: 2
  timeBetweenRetries: 100
  connectiontimeout: 10000000

server:
  port: 4070
  servlet:
    context-path: /api/flights/clusters

jetty:
  threadPool:
    maxThreads: 10
    minThreads: 10

chaos:
  monkey:
    enabled: false
    watcher:
      restController: true
    assaults:
      exceptionsActive: true
      latencyActive: true   
      latencyRangeStart: 10
      latencyRangeEnd: 5000  
      
spring:
  profiles:
    active: default
         
redis:
   host: api-clusters-db
   port: 6379    

connector:
   catalog:
      host: api-catalog:6070
      responsetimeout: 2000
      connectiontimeout: 2000
      readtimeout: 2000
   pricing:
      host: api-pricing:5070
      responsetimeout: 10000
      connectiontimeout: 10000
      readtimeout: 10000
   itineraries-search:
      host: api-itineraries-search:7070
      responsetimeout: 10000
      connectiontimeout: 10000
      readtimeout: 10000

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 10000
      failureRateThreshold: 50
      recordExceptions:
        - java.lang.RuntimeException
        - java.lang.InterruptedException
        - io.netty.handler.timeout.ReadTimeoutException
        - org.springframework.web.reactive.function.client.WebClientRequestException
  backends:
    pricing:
      baseConfig: default